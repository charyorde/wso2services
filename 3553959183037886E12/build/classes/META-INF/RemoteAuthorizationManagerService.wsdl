<?xml version="1.0" encoding="UTF-8"?>
<wsdl:definitions targetNamespace="http://service.ws.um.carbon.wso2.org" xmlns:ns1="http://org.apache.axis2/xsd" xmlns:ns="http://service.ws.um.carbon.wso2.org" xmlns:wsaw="http://www.w3.org/2006/05/addressing/wsdl" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:ax2430="http://core.user.carbon.wso2.org/xsd" xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:ax2431="http://api.user.carbon.wso2.org/xsd">
<wsdl:documentation>RemoteAuthorizationManagerService</wsdl:documentation>
  <wsdl:types>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://api.user.carbon.wso2.org/xsd">
            <xs:complexType name="UserStoreException">
                <xs:sequence/>
            </xs:complexType>
        </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://service.ws.um.carbon.wso2.org" xmlns:ax2433="http://core.user.carbon.wso2.org/xsd">
            <xs:import namespace="http://core.user.carbon.wso2.org/xsd"/>
            <xs:element name="RemoteAuthorizationManagerServiceUserStoreException">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="UserStoreException" nillable="true" type="ax2433:UserStoreException"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="resetPermissionOnUpdateRole">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="roleName" nillable="true" type="xs:string"/>
                        <xs:element minOccurs="0" name="newRoleName" nillable="true" type="xs:string"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="isUserAuthorized">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="userName" nillable="true" type="xs:string"/>
                        <xs:element minOccurs="0" name="resourceId" nillable="true" type="xs:string"/>
                        <xs:element minOccurs="0" name="action" nillable="true" type="xs:string"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="isUserAuthorizedResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="return" type="xs:boolean"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="isRoleAuthorized">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="roleName" nillable="true" type="xs:string"/>
                        <xs:element minOccurs="0" name="resourceId" nillable="true" type="xs:string"/>
                        <xs:element minOccurs="0" name="action" nillable="true" type="xs:string"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="isRoleAuthorizedResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="return" type="xs:boolean"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="getExplicitlyDeniedUsersForResource">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="resourceId" nillable="true" type="xs:string"/>
                        <xs:element minOccurs="0" name="action" nillable="true" type="xs:string"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="getExplicitlyDeniedUsersForResourceResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="xs:string"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="getExplicitlyAllowedUsersForResource">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="resourceId" nillable="true" type="xs:string"/>
                        <xs:element minOccurs="0" name="action" nillable="true" type="xs:string"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="getExplicitlyAllowedUsersForResourceResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="xs:string"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="getDeniedRolesForResource">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="resourceId" nillable="true" type="xs:string"/>
                        <xs:element minOccurs="0" name="action" nillable="true" type="xs:string"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="getDeniedRolesForResourceResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="xs:string"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="getAllowedUIResourcesForUser">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="userName" nillable="true" type="xs:string"/>
                        <xs:element minOccurs="0" name="permissionRootPath" nillable="true" type="xs:string"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="getAllowedUIResourcesForUserResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="xs:string"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="getAllowedRolesForResource">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="resourceId" nillable="true" type="xs:string"/>
                        <xs:element minOccurs="0" name="action" nillable="true" type="xs:string"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="getAllowedRolesForResourceResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="xs:string"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="denyUser">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="userName" nillable="true" type="xs:string"/>
                        <xs:element minOccurs="0" name="resourceId" nillable="true" type="xs:string"/>
                        <xs:element minOccurs="0" name="action" nillable="true" type="xs:string"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="denyRole">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="roleName" nillable="true" type="xs:string"/>
                        <xs:element minOccurs="0" name="resourceId" nillable="true" type="xs:string"/>
                        <xs:element minOccurs="0" name="action" nillable="true" type="xs:string"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="clearUserAuthorization">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="userName" nillable="true" type="xs:string"/>
                        <xs:element minOccurs="0" name="resourceId" nillable="true" type="xs:string"/>
                        <xs:element minOccurs="0" name="action" nillable="true" type="xs:string"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="clearRoleAuthorization">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="roleName" nillable="true" type="xs:string"/>
                        <xs:element minOccurs="0" name="resourceId" nillable="true" type="xs:string"/>
                        <xs:element minOccurs="0" name="action" nillable="true" type="xs:string"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="clearRoleActionOnAllResources">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="roleName" nillable="true" type="xs:string"/>
                        <xs:element minOccurs="0" name="action" nillable="true" type="xs:string"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="clearResourceAuthorizations">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="resourceId" nillable="true" type="xs:string"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="clearAllUserAuthorization">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="userName" nillable="true" type="xs:string"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="clearAllRoleAuthorization">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="roleName" nillable="true" type="xs:string"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="authorizeUser">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="userName" nillable="true" type="xs:string"/>
                        <xs:element minOccurs="0" name="resourceId" nillable="true" type="xs:string"/>
                        <xs:element minOccurs="0" name="action" nillable="true" type="xs:string"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="authorizeRole">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="roleName" nillable="true" type="xs:string"/>
                        <xs:element minOccurs="0" name="resourceId" nillable="true" type="xs:string"/>
                        <xs:element minOccurs="0" name="action" nillable="true" type="xs:string"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
        </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://core.user.carbon.wso2.org/xsd" xmlns:ax2432="http://api.user.carbon.wso2.org/xsd">
            <xs:import namespace="http://api.user.carbon.wso2.org/xsd"/>
            <xs:complexType name="UserStoreException">
                <xs:complexContent>
                    <xs:extension base="ax2432:UserStoreException">
                        <xs:sequence/>
                    </xs:extension>
                </xs:complexContent>
            </xs:complexType>
        </xs:schema>
  </wsdl:types>
  <wsdl:message name="authorizeRoleRequest">
    <wsdl:part name="parameters" element="ns:authorizeRole">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="isRoleAuthorizedResponse">
    <wsdl:part name="parameters" element="ns:isRoleAuthorizedResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="RemoteAuthorizationManagerServiceUserStoreException">
    <wsdl:part name="parameters" element="ns:RemoteAuthorizationManagerServiceUserStoreException">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="clearResourceAuthorizationsRequest">
    <wsdl:part name="parameters" element="ns:clearResourceAuthorizations">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getDeniedRolesForResourceResponse">
    <wsdl:part name="parameters" element="ns:getDeniedRolesForResourceResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getExplicitlyAllowedUsersForResourceRequest">
    <wsdl:part name="parameters" element="ns:getExplicitlyAllowedUsersForResource">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="clearRoleActionOnAllResourcesRequest">
    <wsdl:part name="parameters" element="ns:clearRoleActionOnAllResources">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="denyRoleRequest">
    <wsdl:part name="parameters" element="ns:denyRole">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="clearRoleAuthorizationRequest">
    <wsdl:part name="parameters" element="ns:clearRoleAuthorization">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getExplicitlyDeniedUsersForResourceResponse">
    <wsdl:part name="parameters" element="ns:getExplicitlyDeniedUsersForResourceResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getAllowedRolesForResourceResponse">
    <wsdl:part name="parameters" element="ns:getAllowedRolesForResourceResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="denyUserRequest">
    <wsdl:part name="parameters" element="ns:denyUser">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getExplicitlyAllowedUsersForResourceResponse">
    <wsdl:part name="parameters" element="ns:getExplicitlyAllowedUsersForResourceResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="clearUserAuthorizationRequest">
    <wsdl:part name="parameters" element="ns:clearUserAuthorization">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="isRoleAuthorizedRequest">
    <wsdl:part name="parameters" element="ns:isRoleAuthorized">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getAllowedRolesForResourceRequest">
    <wsdl:part name="parameters" element="ns:getAllowedRolesForResource">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="resetPermissionOnUpdateRoleRequest">
    <wsdl:part name="parameters" element="ns:resetPermissionOnUpdateRole">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="clearAllUserAuthorizationRequest">
    <wsdl:part name="parameters" element="ns:clearAllUserAuthorization">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="isUserAuthorizedResponse">
    <wsdl:part name="parameters" element="ns:isUserAuthorizedResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getAllowedUIResourcesForUserResponse">
    <wsdl:part name="parameters" element="ns:getAllowedUIResourcesForUserResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getDeniedRolesForResourceRequest">
    <wsdl:part name="parameters" element="ns:getDeniedRolesForResource">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="isUserAuthorizedRequest">
    <wsdl:part name="parameters" element="ns:isUserAuthorized">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getAllowedUIResourcesForUserRequest">
    <wsdl:part name="parameters" element="ns:getAllowedUIResourcesForUser">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="authorizeUserRequest">
    <wsdl:part name="parameters" element="ns:authorizeUser">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getExplicitlyDeniedUsersForResourceRequest">
    <wsdl:part name="parameters" element="ns:getExplicitlyDeniedUsersForResource">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="clearAllRoleAuthorizationRequest">
    <wsdl:part name="parameters" element="ns:clearAllRoleAuthorization">
    </wsdl:part>
  </wsdl:message>
  <wsdl:portType name="RemoteAuthorizationManagerServicePortType">
    <wsdl:operation name="denyUser">
      <wsdl:input message="ns:denyUserRequest" wsaw:Action="urn:denyUser">
    </wsdl:input>
      <wsdl:fault name="RemoteAuthorizationManagerServiceUserStoreException" message="ns:RemoteAuthorizationManagerServiceUserStoreException" wsaw:Action="urn:denyUserRemoteAuthorizationManagerServiceUserStoreException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllowedUIResourcesForUser">
      <wsdl:input message="ns:getAllowedUIResourcesForUserRequest" wsaw:Action="urn:getAllowedUIResourcesForUser">
    </wsdl:input>
      <wsdl:output message="ns:getAllowedUIResourcesForUserResponse" wsaw:Action="urn:getAllowedUIResourcesForUserResponse">
    </wsdl:output>
      <wsdl:fault name="RemoteAuthorizationManagerServiceUserStoreException" message="ns:RemoteAuthorizationManagerServiceUserStoreException" wsaw:Action="urn:getAllowedUIResourcesForUserRemoteAuthorizationManagerServiceUserStoreException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="resetPermissionOnUpdateRole">
      <wsdl:input message="ns:resetPermissionOnUpdateRoleRequest" wsaw:Action="urn:resetPermissionOnUpdateRole">
    </wsdl:input>
      <wsdl:fault name="RemoteAuthorizationManagerServiceUserStoreException" message="ns:RemoteAuthorizationManagerServiceUserStoreException" wsaw:Action="urn:resetPermissionOnUpdateRoleRemoteAuthorizationManagerServiceUserStoreException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="authorizeRole">
      <wsdl:input message="ns:authorizeRoleRequest" wsaw:Action="urn:authorizeRole">
    </wsdl:input>
      <wsdl:fault name="RemoteAuthorizationManagerServiceUserStoreException" message="ns:RemoteAuthorizationManagerServiceUserStoreException" wsaw:Action="urn:authorizeRoleRemoteAuthorizationManagerServiceUserStoreException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="denyRole">
      <wsdl:input message="ns:denyRoleRequest" wsaw:Action="urn:denyRole">
    </wsdl:input>
      <wsdl:fault name="RemoteAuthorizationManagerServiceUserStoreException" message="ns:RemoteAuthorizationManagerServiceUserStoreException" wsaw:Action="urn:denyRoleRemoteAuthorizationManagerServiceUserStoreException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="clearRoleActionOnAllResources">
      <wsdl:input message="ns:clearRoleActionOnAllResourcesRequest" wsaw:Action="urn:clearRoleActionOnAllResources">
    </wsdl:input>
      <wsdl:fault name="RemoteAuthorizationManagerServiceUserStoreException" message="ns:RemoteAuthorizationManagerServiceUserStoreException" wsaw:Action="urn:clearRoleActionOnAllResourcesRemoteAuthorizationManagerServiceUserStoreException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="isUserAuthorized">
      <wsdl:input message="ns:isUserAuthorizedRequest" wsaw:Action="urn:isUserAuthorized">
    </wsdl:input>
      <wsdl:output message="ns:isUserAuthorizedResponse" wsaw:Action="urn:isUserAuthorizedResponse">
    </wsdl:output>
      <wsdl:fault name="RemoteAuthorizationManagerServiceUserStoreException" message="ns:RemoteAuthorizationManagerServiceUserStoreException" wsaw:Action="urn:isUserAuthorizedRemoteAuthorizationManagerServiceUserStoreException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getExplicitlyDeniedUsersForResource">
      <wsdl:input message="ns:getExplicitlyDeniedUsersForResourceRequest" wsaw:Action="urn:getExplicitlyDeniedUsersForResource">
    </wsdl:input>
      <wsdl:output message="ns:getExplicitlyDeniedUsersForResourceResponse" wsaw:Action="urn:getExplicitlyDeniedUsersForResourceResponse">
    </wsdl:output>
      <wsdl:fault name="RemoteAuthorizationManagerServiceUserStoreException" message="ns:RemoteAuthorizationManagerServiceUserStoreException" wsaw:Action="urn:getExplicitlyDeniedUsersForResourceRemoteAuthorizationManagerServiceUserStoreException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="authorizeUser">
      <wsdl:input message="ns:authorizeUserRequest" wsaw:Action="urn:authorizeUser">
    </wsdl:input>
      <wsdl:fault name="RemoteAuthorizationManagerServiceUserStoreException" message="ns:RemoteAuthorizationManagerServiceUserStoreException" wsaw:Action="urn:authorizeUserRemoteAuthorizationManagerServiceUserStoreException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="clearRoleAuthorization">
      <wsdl:input message="ns:clearRoleAuthorizationRequest" wsaw:Action="urn:clearRoleAuthorization">
    </wsdl:input>
      <wsdl:fault name="RemoteAuthorizationManagerServiceUserStoreException" message="ns:RemoteAuthorizationManagerServiceUserStoreException" wsaw:Action="urn:clearRoleAuthorizationRemoteAuthorizationManagerServiceUserStoreException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="clearAllUserAuthorization">
      <wsdl:input message="ns:clearAllUserAuthorizationRequest" wsaw:Action="urn:clearAllUserAuthorization">
    </wsdl:input>
      <wsdl:fault name="RemoteAuthorizationManagerServiceUserStoreException" message="ns:RemoteAuthorizationManagerServiceUserStoreException" wsaw:Action="urn:clearAllUserAuthorizationRemoteAuthorizationManagerServiceUserStoreException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="clearUserAuthorization">
      <wsdl:input message="ns:clearUserAuthorizationRequest" wsaw:Action="urn:clearUserAuthorization">
    </wsdl:input>
      <wsdl:fault name="RemoteAuthorizationManagerServiceUserStoreException" message="ns:RemoteAuthorizationManagerServiceUserStoreException" wsaw:Action="urn:clearUserAuthorizationRemoteAuthorizationManagerServiceUserStoreException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllowedRolesForResource">
      <wsdl:input message="ns:getAllowedRolesForResourceRequest" wsaw:Action="urn:getAllowedRolesForResource">
    </wsdl:input>
      <wsdl:output message="ns:getAllowedRolesForResourceResponse" wsaw:Action="urn:getAllowedRolesForResourceResponse">
    </wsdl:output>
      <wsdl:fault name="RemoteAuthorizationManagerServiceUserStoreException" message="ns:RemoteAuthorizationManagerServiceUserStoreException" wsaw:Action="urn:getAllowedRolesForResourceRemoteAuthorizationManagerServiceUserStoreException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="clearResourceAuthorizations">
      <wsdl:input message="ns:clearResourceAuthorizationsRequest" wsaw:Action="urn:clearResourceAuthorizations">
    </wsdl:input>
      <wsdl:fault name="RemoteAuthorizationManagerServiceUserStoreException" message="ns:RemoteAuthorizationManagerServiceUserStoreException" wsaw:Action="urn:clearResourceAuthorizationsRemoteAuthorizationManagerServiceUserStoreException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getDeniedRolesForResource">
      <wsdl:input message="ns:getDeniedRolesForResourceRequest" wsaw:Action="urn:getDeniedRolesForResource">
    </wsdl:input>
      <wsdl:output message="ns:getDeniedRolesForResourceResponse" wsaw:Action="urn:getDeniedRolesForResourceResponse">
    </wsdl:output>
      <wsdl:fault name="RemoteAuthorizationManagerServiceUserStoreException" message="ns:RemoteAuthorizationManagerServiceUserStoreException" wsaw:Action="urn:getDeniedRolesForResourceRemoteAuthorizationManagerServiceUserStoreException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="isRoleAuthorized">
      <wsdl:input message="ns:isRoleAuthorizedRequest" wsaw:Action="urn:isRoleAuthorized">
    </wsdl:input>
      <wsdl:output message="ns:isRoleAuthorizedResponse" wsaw:Action="urn:isRoleAuthorizedResponse">
    </wsdl:output>
      <wsdl:fault name="RemoteAuthorizationManagerServiceUserStoreException" message="ns:RemoteAuthorizationManagerServiceUserStoreException" wsaw:Action="urn:isRoleAuthorizedRemoteAuthorizationManagerServiceUserStoreException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getExplicitlyAllowedUsersForResource">
      <wsdl:input message="ns:getExplicitlyAllowedUsersForResourceRequest" wsaw:Action="urn:getExplicitlyAllowedUsersForResource">
    </wsdl:input>
      <wsdl:output message="ns:getExplicitlyAllowedUsersForResourceResponse" wsaw:Action="urn:getExplicitlyAllowedUsersForResourceResponse">
    </wsdl:output>
      <wsdl:fault name="RemoteAuthorizationManagerServiceUserStoreException" message="ns:RemoteAuthorizationManagerServiceUserStoreException" wsaw:Action="urn:getExplicitlyAllowedUsersForResourceRemoteAuthorizationManagerServiceUserStoreException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="clearAllRoleAuthorization">
      <wsdl:input message="ns:clearAllRoleAuthorizationRequest" wsaw:Action="urn:clearAllRoleAuthorization">
    </wsdl:input>
      <wsdl:fault name="RemoteAuthorizationManagerServiceUserStoreException" message="ns:RemoteAuthorizationManagerServiceUserStoreException" wsaw:Action="urn:clearAllRoleAuthorizationRemoteAuthorizationManagerServiceUserStoreException">
    </wsdl:fault>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="RemoteAuthorizationManagerServiceHttpBinding" type="ns:RemoteAuthorizationManagerServicePortType">
    <http:binding verb="POST"/>
    <wsdl:operation name="denyUser">
      <http:operation location="denyUser"/>
      <wsdl:input>
        <mime:content part="parameters" type="text/xml"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="getAllowedUIResourcesForUser">
      <http:operation location="getAllowedUIResourcesForUser"/>
      <wsdl:input>
        <mime:content part="parameters" type="text/xml"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content part="parameters" type="text/xml"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="resetPermissionOnUpdateRole">
      <http:operation location="resetPermissionOnUpdateRole"/>
      <wsdl:input>
        <mime:content part="parameters" type="text/xml"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="authorizeRole">
      <http:operation location="authorizeRole"/>
      <wsdl:input>
        <mime:content part="parameters" type="text/xml"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="denyRole">
      <http:operation location="denyRole"/>
      <wsdl:input>
        <mime:content part="parameters" type="text/xml"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="clearRoleActionOnAllResources">
      <http:operation location="clearRoleActionOnAllResources"/>
      <wsdl:input>
        <mime:content part="parameters" type="text/xml"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="isUserAuthorized">
      <http:operation location="isUserAuthorized"/>
      <wsdl:input>
        <mime:content part="parameters" type="text/xml"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content part="parameters" type="text/xml"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getExplicitlyDeniedUsersForResource">
      <http:operation location="getExplicitlyDeniedUsersForResource"/>
      <wsdl:input>
        <mime:content part="parameters" type="text/xml"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content part="parameters" type="text/xml"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="authorizeUser">
      <http:operation location="authorizeUser"/>
      <wsdl:input>
        <mime:content part="parameters" type="text/xml"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="clearRoleAuthorization">
      <http:operation location="clearRoleAuthorization"/>
      <wsdl:input>
        <mime:content part="parameters" type="text/xml"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="clearAllUserAuthorization">
      <http:operation location="clearAllUserAuthorization"/>
      <wsdl:input>
        <mime:content part="parameters" type="text/xml"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="getAllowedRolesForResource">
      <http:operation location="getAllowedRolesForResource"/>
      <wsdl:input>
        <mime:content part="parameters" type="text/xml"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content part="parameters" type="text/xml"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="clearUserAuthorization">
      <http:operation location="clearUserAuthorization"/>
      <wsdl:input>
        <mime:content part="parameters" type="text/xml"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="getDeniedRolesForResource">
      <http:operation location="getDeniedRolesForResource"/>
      <wsdl:input>
        <mime:content part="parameters" type="text/xml"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content part="parameters" type="text/xml"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="clearResourceAuthorizations">
      <http:operation location="clearResourceAuthorizations"/>
      <wsdl:input>
        <mime:content part="parameters" type="text/xml"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="isRoleAuthorized">
      <http:operation location="isRoleAuthorized"/>
      <wsdl:input>
        <mime:content part="parameters" type="text/xml"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content part="parameters" type="text/xml"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="clearAllRoleAuthorization">
      <http:operation location="clearAllRoleAuthorization"/>
      <wsdl:input>
        <mime:content part="parameters" type="text/xml"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="getExplicitlyAllowedUsersForResource">
      <http:operation location="getExplicitlyAllowedUsersForResource"/>
      <wsdl:input>
        <mime:content part="parameters" type="text/xml"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content part="parameters" type="text/xml"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="RemoteAuthorizationManagerServiceSoap12Binding" type="ns:RemoteAuthorizationManagerServicePortType">
    <soap12:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="denyUser">
      <soap12:operation soapAction="urn:denyUser" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="RemoteAuthorizationManagerServiceUserStoreException">
        <soap12:fault name="RemoteAuthorizationManagerServiceUserStoreException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllowedUIResourcesForUser">
      <soap12:operation soapAction="urn:getAllowedUIResourcesForUser" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="RemoteAuthorizationManagerServiceUserStoreException">
        <soap12:fault name="RemoteAuthorizationManagerServiceUserStoreException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="resetPermissionOnUpdateRole">
      <soap12:operation soapAction="urn:resetPermissionOnUpdateRole" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="RemoteAuthorizationManagerServiceUserStoreException">
        <soap12:fault name="RemoteAuthorizationManagerServiceUserStoreException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="authorizeRole">
      <soap12:operation soapAction="urn:authorizeRole" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="RemoteAuthorizationManagerServiceUserStoreException">
        <soap12:fault name="RemoteAuthorizationManagerServiceUserStoreException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="denyRole">
      <soap12:operation soapAction="urn:denyRole" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="RemoteAuthorizationManagerServiceUserStoreException">
        <soap12:fault name="RemoteAuthorizationManagerServiceUserStoreException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="clearRoleActionOnAllResources">
      <soap12:operation soapAction="urn:clearRoleActionOnAllResources" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="RemoteAuthorizationManagerServiceUserStoreException">
        <soap12:fault name="RemoteAuthorizationManagerServiceUserStoreException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="isUserAuthorized">
      <soap12:operation soapAction="urn:isUserAuthorized" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="RemoteAuthorizationManagerServiceUserStoreException">
        <soap12:fault name="RemoteAuthorizationManagerServiceUserStoreException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getExplicitlyDeniedUsersForResource">
      <soap12:operation soapAction="urn:getExplicitlyDeniedUsersForResource" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="RemoteAuthorizationManagerServiceUserStoreException">
        <soap12:fault name="RemoteAuthorizationManagerServiceUserStoreException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="authorizeUser">
      <soap12:operation soapAction="urn:authorizeUser" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="RemoteAuthorizationManagerServiceUserStoreException">
        <soap12:fault name="RemoteAuthorizationManagerServiceUserStoreException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="clearRoleAuthorization">
      <soap12:operation soapAction="urn:clearRoleAuthorization" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="RemoteAuthorizationManagerServiceUserStoreException">
        <soap12:fault name="RemoteAuthorizationManagerServiceUserStoreException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="clearAllUserAuthorization">
      <soap12:operation soapAction="urn:clearAllUserAuthorization" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="RemoteAuthorizationManagerServiceUserStoreException">
        <soap12:fault name="RemoteAuthorizationManagerServiceUserStoreException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllowedRolesForResource">
      <soap12:operation soapAction="urn:getAllowedRolesForResource" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="RemoteAuthorizationManagerServiceUserStoreException">
        <soap12:fault name="RemoteAuthorizationManagerServiceUserStoreException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="clearUserAuthorization">
      <soap12:operation soapAction="urn:clearUserAuthorization" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="RemoteAuthorizationManagerServiceUserStoreException">
        <soap12:fault name="RemoteAuthorizationManagerServiceUserStoreException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getDeniedRolesForResource">
      <soap12:operation soapAction="urn:getDeniedRolesForResource" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="RemoteAuthorizationManagerServiceUserStoreException">
        <soap12:fault name="RemoteAuthorizationManagerServiceUserStoreException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="clearResourceAuthorizations">
      <soap12:operation soapAction="urn:clearResourceAuthorizations" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="RemoteAuthorizationManagerServiceUserStoreException">
        <soap12:fault name="RemoteAuthorizationManagerServiceUserStoreException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="isRoleAuthorized">
      <soap12:operation soapAction="urn:isRoleAuthorized" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="RemoteAuthorizationManagerServiceUserStoreException">
        <soap12:fault name="RemoteAuthorizationManagerServiceUserStoreException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="clearAllRoleAuthorization">
      <soap12:operation soapAction="urn:clearAllRoleAuthorization" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="RemoteAuthorizationManagerServiceUserStoreException">
        <soap12:fault name="RemoteAuthorizationManagerServiceUserStoreException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getExplicitlyAllowedUsersForResource">
      <soap12:operation soapAction="urn:getExplicitlyAllowedUsersForResource" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="RemoteAuthorizationManagerServiceUserStoreException">
        <soap12:fault name="RemoteAuthorizationManagerServiceUserStoreException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="RemoteAuthorizationManagerServiceSoap11Binding" type="ns:RemoteAuthorizationManagerServicePortType">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="denyUser">
      <soap:operation soapAction="urn:denyUser" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="RemoteAuthorizationManagerServiceUserStoreException">
        <soap:fault name="RemoteAuthorizationManagerServiceUserStoreException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllowedUIResourcesForUser">
      <soap:operation soapAction="urn:getAllowedUIResourcesForUser" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="RemoteAuthorizationManagerServiceUserStoreException">
        <soap:fault name="RemoteAuthorizationManagerServiceUserStoreException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="resetPermissionOnUpdateRole">
      <soap:operation soapAction="urn:resetPermissionOnUpdateRole" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="RemoteAuthorizationManagerServiceUserStoreException">
        <soap:fault name="RemoteAuthorizationManagerServiceUserStoreException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="authorizeRole">
      <soap:operation soapAction="urn:authorizeRole" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="RemoteAuthorizationManagerServiceUserStoreException">
        <soap:fault name="RemoteAuthorizationManagerServiceUserStoreException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="denyRole">
      <soap:operation soapAction="urn:denyRole" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="RemoteAuthorizationManagerServiceUserStoreException">
        <soap:fault name="RemoteAuthorizationManagerServiceUserStoreException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="clearRoleActionOnAllResources">
      <soap:operation soapAction="urn:clearRoleActionOnAllResources" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="RemoteAuthorizationManagerServiceUserStoreException">
        <soap:fault name="RemoteAuthorizationManagerServiceUserStoreException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="isUserAuthorized">
      <soap:operation soapAction="urn:isUserAuthorized" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="RemoteAuthorizationManagerServiceUserStoreException">
        <soap:fault name="RemoteAuthorizationManagerServiceUserStoreException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getExplicitlyDeniedUsersForResource">
      <soap:operation soapAction="urn:getExplicitlyDeniedUsersForResource" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="RemoteAuthorizationManagerServiceUserStoreException">
        <soap:fault name="RemoteAuthorizationManagerServiceUserStoreException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="authorizeUser">
      <soap:operation soapAction="urn:authorizeUser" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="RemoteAuthorizationManagerServiceUserStoreException">
        <soap:fault name="RemoteAuthorizationManagerServiceUserStoreException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="clearRoleAuthorization">
      <soap:operation soapAction="urn:clearRoleAuthorization" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="RemoteAuthorizationManagerServiceUserStoreException">
        <soap:fault name="RemoteAuthorizationManagerServiceUserStoreException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="clearAllUserAuthorization">
      <soap:operation soapAction="urn:clearAllUserAuthorization" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="RemoteAuthorizationManagerServiceUserStoreException">
        <soap:fault name="RemoteAuthorizationManagerServiceUserStoreException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllowedRolesForResource">
      <soap:operation soapAction="urn:getAllowedRolesForResource" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="RemoteAuthorizationManagerServiceUserStoreException">
        <soap:fault name="RemoteAuthorizationManagerServiceUserStoreException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="clearUserAuthorization">
      <soap:operation soapAction="urn:clearUserAuthorization" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="RemoteAuthorizationManagerServiceUserStoreException">
        <soap:fault name="RemoteAuthorizationManagerServiceUserStoreException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getDeniedRolesForResource">
      <soap:operation soapAction="urn:getDeniedRolesForResource" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="RemoteAuthorizationManagerServiceUserStoreException">
        <soap:fault name="RemoteAuthorizationManagerServiceUserStoreException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="clearResourceAuthorizations">
      <soap:operation soapAction="urn:clearResourceAuthorizations" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="RemoteAuthorizationManagerServiceUserStoreException">
        <soap:fault name="RemoteAuthorizationManagerServiceUserStoreException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="isRoleAuthorized">
      <soap:operation soapAction="urn:isRoleAuthorized" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="RemoteAuthorizationManagerServiceUserStoreException">
        <soap:fault name="RemoteAuthorizationManagerServiceUserStoreException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="clearAllRoleAuthorization">
      <soap:operation soapAction="urn:clearAllRoleAuthorization" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="RemoteAuthorizationManagerServiceUserStoreException">
        <soap:fault name="RemoteAuthorizationManagerServiceUserStoreException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getExplicitlyAllowedUsersForResource">
      <soap:operation soapAction="urn:getExplicitlyAllowedUsersForResource" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="RemoteAuthorizationManagerServiceUserStoreException">
        <soap:fault name="RemoteAuthorizationManagerServiceUserStoreException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="RemoteAuthorizationManagerService">
    <wsdl:port name="RemoteAuthorizationManagerServiceHttpsSoap11Endpoint" binding="ns:RemoteAuthorizationManagerServiceSoap11Binding">
      <soap:address location="https://identity.cloud-test.wso2.com:9444/services/RemoteAuthorizationManagerService.RemoteAuthorizationManagerServiceHttpsSoap11Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="RemoteAuthorizationManagerServiceHttpsSoap12Endpoint" binding="ns:RemoteAuthorizationManagerServiceSoap12Binding">
      <soap12:address location="https://identity.cloud-test.wso2.com:9444/services/RemoteAuthorizationManagerService.RemoteAuthorizationManagerServiceHttpsSoap12Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="RemoteAuthorizationManagerServiceHttpsEndpoint" binding="ns:RemoteAuthorizationManagerServiceHttpBinding">
      <http:address location="https://identity.cloud-test.wso2.com:9444/services/RemoteAuthorizationManagerService.RemoteAuthorizationManagerServiceHttpsEndpoint/"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>
