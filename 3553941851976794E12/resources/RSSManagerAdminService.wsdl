<?xml version="1.0" encoding="UTF-8"?>
<wsdl:definitions targetNamespace="http://admin.core.adminconsole.carbon.wso2.org" xmlns:ns1="http://org.apache.axis2/xsd" xmlns:ns="http://admin.core.adminconsole.carbon.wso2.org" xmlns:wsaw="http://www.w3.org/2006/05/addressing/wsdl" xmlns:ax25="http://description.core.adminconsole.carbon.wso2.org/xsd" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:ax23="http://exception.core.adminconsole.carbon.wso2.org/xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/">
<wsdl:documentation>RSSManagerAdminService</wsdl:documentation>
  <wsdl:types>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://admin.core.adminconsole.carbon.wso2.org" xmlns:ax24="http://exception.core.adminconsole.carbon.wso2.org/xsd" xmlns:ax26="http://description.core.adminconsole.carbon.wso2.org/xsd">
            <xs:import namespace="http://exception.core.adminconsole.carbon.wso2.org/xsd"/>
            <xs:import namespace="http://description.core.adminconsole.carbon.wso2.org/xsd"/>
            <xs:element name="RSSManagerAdminServiceRSSDAOException">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="RSSDAOException" nillable="true" type="ax23:RSSDAOException"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="testConnection">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="driverClass" nillable="true" type="xs:string"/>
                        <xs:element minOccurs="0" name="jdbcURL" nillable="true" type="xs:string"/>
                        <xs:element minOccurs="0" name="username" nillable="true" type="xs:string"/>
                        <xs:element minOccurs="0" name="password" nillable="true" type="xs:string"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="testConnectionResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="return" nillable="true" type="xs:string"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="removeRSSInstance">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="rssInsId" type="xs:int"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="removePrivilegeGroup">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="privGroupId" type="xs:int"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="getUsersByDatabaseInstanceId">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="dbInstId" type="xs:int"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="getUsersByDatabaseInstanceIdResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="ax25:DatabaseUserEntry"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="getUserDatabasePermissions">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="userId" type="xs:int"/>
                        <xs:element minOccurs="0" name="dbInsId" type="xs:int"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="getUserDatabasePermissionsResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="return" nillable="true" type="xs:string"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="getRoundRobinAssignedRSSInstance">
                <xs:complexType>
                    <xs:sequence/>
                </xs:complexType>
            </xs:element>
            <xs:element name="getRoundRobinAssignedRSSInstanceResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="return" nillable="true" type="ax25:RSSInstanceEntry"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="getRSSInstanceList">
                <xs:complexType>
                    <xs:sequence/>
                </xs:complexType>
            </xs:element>
            <xs:element name="getRSSInstanceListResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="ax25:RSSInstanceEntry"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="getRSSInstanceDataById">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="rssInsId" type="xs:int"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="getRSSInstanceDataByIdResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="return" nillable="true" type="ax25:RSSInstance"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="getPrivilegeGroups">
                <xs:complexType>
                    <xs:sequence/>
                </xs:complexType>
            </xs:element>
            <xs:element name="getPrivilegeGroupsResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="ax25:PrivilegeGroup"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="getPrivilegeGroupById">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="privGroupId" type="xs:int"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="getPrivilegeGroupByIdResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="return" nillable="true" type="ax25:PrivilegeGroup"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="getDatabaseUserById">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="userId" type="xs:int"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="getDatabaseUserByIdResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="return" nillable="true" type="ax25:DatabaseUser"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="getDatabaseInstanceList">
                <xs:complexType>
                    <xs:sequence/>
                </xs:complexType>
            </xs:element>
            <xs:element name="getDatabaseInstanceListResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="ax25:DatabaseInstanceEntry"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="getDatabaseInstanceById">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="dbInsId" type="xs:int"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="getDatabaseInstanceByIdResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="return" nillable="true" type="ax25:DatabaseInstanceEntry"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="editUserPrivileges">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="privs" nillable="true" type="xs:string"/>
                        <xs:element minOccurs="0" name="user" nillable="true" type="ax25:DatabaseUser"/>
                        <xs:element minOccurs="0" name="dbInsId" type="xs:int"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="editRSSInstance">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="rssIns" nillable="true" type="ax25:RSSInstance"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="editPrivilegeGroup">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="privGroup" nillable="true" type="ax25:PrivilegeGroup"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="dropUser">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="userId" type="xs:int"/>
                        <xs:element minOccurs="0" name="dbInsId" type="xs:int"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="dropDatabase">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="dbInsId" type="xs:int"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="createUser">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="user" nillable="true" type="ax25:DatabaseUser"/>
                        <xs:element minOccurs="0" name="privGroupId" type="xs:int"/>
                        <xs:element minOccurs="0" name="dbInsId" type="xs:int"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="createPrivilegeGroup">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="privGroup" nillable="true" type="ax25:PrivilegeGroup"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="createDatabase">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="dbIns" nillable="true" type="xs:anyType"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="createCarbonDSFromDatabaseUserEntry">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="dbInsId" type="xs:int"/>
                        <xs:element minOccurs="0" name="userId" type="xs:int"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="createCarbonDSFromDatabaseUserEntryResponse">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="return" nillable="true" type="xs:string"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="addRSSInstance">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" name="rssIns" nillable="true" type="ax25:RSSInstance"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
        </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://description.core.adminconsole.carbon.wso2.org/xsd">
            <xs:complexType name="DatabaseUserEntry">
                <xs:sequence>
                    <xs:element minOccurs="0" name="rssInstanceId" type="xs:int"/>
                    <xs:element minOccurs="0" name="userId" type="xs:int"/>
                    <xs:element minOccurs="0" name="username" nillable="true" type="xs:string"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="RSSInstanceEntry">
                <xs:sequence>
                    <xs:element minOccurs="0" name="instanceType" nillable="true" type="xs:string"/>
                    <xs:element minOccurs="0" name="name" nillable="true" type="xs:string"/>
                    <xs:element minOccurs="0" name="rssInstanceId" type="xs:int"/>
                    <xs:element minOccurs="0" name="serverCategory" nillable="true" type="xs:string"/>
                    <xs:element minOccurs="0" name="serverUrl" nillable="true" type="xs:string"/>
                    <xs:element minOccurs="0" name="tenantDomainName" nillable="true" type="xs:string"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="RSSInstance">
                <xs:sequence>
                    <xs:element minOccurs="0" name="adminPassword" nillable="true" type="xs:string"/>
                    <xs:element minOccurs="0" name="adminUsername" nillable="true" type="xs:string"/>
                    <xs:element minOccurs="0" name="dbmsType" nillable="true" type="xs:string"/>
                    <xs:element minOccurs="0" name="instanceType" nillable="true" type="xs:string"/>
                    <xs:element minOccurs="0" name="name" nillable="true" type="xs:string"/>
                    <xs:element minOccurs="0" name="rssInstanceId" type="xs:int"/>
                    <xs:element minOccurs="0" name="serverCategory" nillable="true" type="xs:string"/>
                    <xs:element minOccurs="0" name="serverURL" nillable="true" type="xs:string"/>
                    <xs:element minOccurs="0" name="tenantId" type="xs:int"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="PrivilegeGroup">
                <xs:sequence>
                    <xs:element minOccurs="0" name="privGroupId" type="xs:int"/>
                    <xs:element minOccurs="0" name="privGroupName" nillable="true" type="xs:string"/>
                    <xs:element maxOccurs="unbounded" minOccurs="0" name="privs" nillable="true" type="ax25:DatabasePrivilege"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="DatabasePrivilege">
                <xs:sequence>
                    <xs:element minOccurs="0" name="privName" nillable="true" type="xs:string"/>
                    <xs:element minOccurs="0" name="privValue" nillable="true" type="xs:string"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="DatabaseUser">
                <xs:sequence>
                    <xs:element minOccurs="0" name="password" nillable="true" type="xs:string"/>
                    <xs:element minOccurs="0" name="rssInstanceId" type="xs:int"/>
                    <xs:element minOccurs="0" name="userId" type="xs:int"/>
                    <xs:element minOccurs="0" name="username" nillable="true" type="xs:string"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="DatabaseInstanceEntry">
                <xs:sequence>
                    <xs:element minOccurs="0" name="dbInstanceId" type="xs:int"/>
                    <xs:element minOccurs="0" name="dbName" nillable="true" type="xs:string"/>
                    <xs:element minOccurs="0" name="dbUrl" nillable="true" type="xs:string"/>
                    <xs:element minOccurs="0" name="rssInstanceId" type="xs:int"/>
                    <xs:element minOccurs="0" name="rssName" nillable="true" type="xs:string"/>
                    <xs:element minOccurs="0" name="rssTenantDomain" nillable="true" type="xs:string"/>
                </xs:sequence>
            </xs:complexType>
        </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://exception.core.adminconsole.carbon.wso2.org/xsd">
            <xs:complexType name="RSSDAOException">
                <xs:sequence/>
            </xs:complexType>
        </xs:schema>
  </wsdl:types>
  <wsdl:message name="createDatabaseRequest">
    <wsdl:part name="parameters" element="ns:createDatabase">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getDatabaseInstanceByIdResponse">
    <wsdl:part name="parameters" element="ns:getDatabaseInstanceByIdResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="addRSSInstanceRequest">
    <wsdl:part name="parameters" element="ns:addRSSInstance">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="testConnectionRequest">
    <wsdl:part name="parameters" element="ns:testConnection">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getPrivilegeGroupByIdResponse">
    <wsdl:part name="parameters" element="ns:getPrivilegeGroupByIdResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="dropUserRequest">
    <wsdl:part name="parameters" element="ns:dropUser">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getDatabaseUserByIdResponse">
    <wsdl:part name="parameters" element="ns:getDatabaseUserByIdResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getUsersByDatabaseInstanceIdResponse">
    <wsdl:part name="parameters" element="ns:getUsersByDatabaseInstanceIdResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getDatabaseUserByIdRequest">
    <wsdl:part name="parameters" element="ns:getDatabaseUserById">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getUserDatabasePermissionsRequest">
    <wsdl:part name="parameters" element="ns:getUserDatabasePermissions">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getPrivilegeGroupsRequest">
    <wsdl:part name="parameters" element="ns:getPrivilegeGroups">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="editPrivilegeGroupRequest">
    <wsdl:part name="parameters" element="ns:editPrivilegeGroup">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getRSSInstanceListResponse">
    <wsdl:part name="parameters" element="ns:getRSSInstanceListResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="createPrivilegeGroupRequest">
    <wsdl:part name="parameters" element="ns:createPrivilegeGroup">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getRoundRobinAssignedRSSInstanceResponse">
    <wsdl:part name="parameters" element="ns:getRoundRobinAssignedRSSInstanceResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="createCarbonDSFromDatabaseUserEntryResponse">
    <wsdl:part name="parameters" element="ns:createCarbonDSFromDatabaseUserEntryResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="RSSManagerAdminServiceRSSDAOException">
    <wsdl:part name="parameters" element="ns:RSSManagerAdminServiceRSSDAOException">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getRoundRobinAssignedRSSInstanceRequest">
    <wsdl:part name="parameters" element="ns:getRoundRobinAssignedRSSInstance">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getDatabaseInstanceListRequest">
    <wsdl:part name="parameters" element="ns:getDatabaseInstanceList">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="testConnectionResponse">
    <wsdl:part name="parameters" element="ns:testConnectionResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="removeRSSInstanceRequest">
    <wsdl:part name="parameters" element="ns:removeRSSInstance">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getPrivilegeGroupByIdRequest">
    <wsdl:part name="parameters" element="ns:getPrivilegeGroupById">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="dropDatabaseRequest">
    <wsdl:part name="parameters" element="ns:dropDatabase">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getUsersByDatabaseInstanceIdRequest">
    <wsdl:part name="parameters" element="ns:getUsersByDatabaseInstanceId">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="editRSSInstanceRequest">
    <wsdl:part name="parameters" element="ns:editRSSInstance">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getUserDatabasePermissionsResponse">
    <wsdl:part name="parameters" element="ns:getUserDatabasePermissionsResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getDatabaseInstanceListResponse">
    <wsdl:part name="parameters" element="ns:getDatabaseInstanceListResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getDatabaseInstanceByIdRequest">
    <wsdl:part name="parameters" element="ns:getDatabaseInstanceById">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="removePrivilegeGroupRequest">
    <wsdl:part name="parameters" element="ns:removePrivilegeGroup">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="editUserPrivilegesRequest">
    <wsdl:part name="parameters" element="ns:editUserPrivileges">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getPrivilegeGroupsResponse">
    <wsdl:part name="parameters" element="ns:getPrivilegeGroupsResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getRSSInstanceDataByIdRequest">
    <wsdl:part name="parameters" element="ns:getRSSInstanceDataById">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getRSSInstanceDataByIdResponse">
    <wsdl:part name="parameters" element="ns:getRSSInstanceDataByIdResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="createCarbonDSFromDatabaseUserEntryRequest">
    <wsdl:part name="parameters" element="ns:createCarbonDSFromDatabaseUserEntry">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="createUserRequest">
    <wsdl:part name="parameters" element="ns:createUser">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getRSSInstanceListRequest">
    <wsdl:part name="parameters" element="ns:getRSSInstanceList">
    </wsdl:part>
  </wsdl:message>
  <wsdl:portType name="RSSManagerAdminServicePortType">
    <wsdl:operation name="getRSSInstanceList">
      <wsdl:input message="ns:getRSSInstanceListRequest" wsaw:Action="urn:getRSSInstanceList">
    </wsdl:input>
      <wsdl:output message="ns:getRSSInstanceListResponse" wsaw:Action="urn:getRSSInstanceListResponse">
    </wsdl:output>
      <wsdl:fault name="RSSManagerAdminServiceRSSDAOException" message="ns:RSSManagerAdminServiceRSSDAOException" wsaw:Action="urn:getRSSInstanceListRSSManagerAdminServiceRSSDAOException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="testConnection">
      <wsdl:input message="ns:testConnectionRequest" wsaw:Action="urn:testConnection">
    </wsdl:input>
      <wsdl:output message="ns:testConnectionResponse" wsaw:Action="urn:testConnectionResponse">
    </wsdl:output>
      <wsdl:fault name="RSSManagerAdminServiceRSSDAOException" message="ns:RSSManagerAdminServiceRSSDAOException" wsaw:Action="urn:testConnectionRSSManagerAdminServiceRSSDAOException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="editPrivilegeGroup">
      <wsdl:input message="ns:editPrivilegeGroupRequest" wsaw:Action="urn:editPrivilegeGroup">
    </wsdl:input>
      <wsdl:fault name="RSSManagerAdminServiceRSSDAOException" message="ns:RSSManagerAdminServiceRSSDAOException" wsaw:Action="urn:editPrivilegeGroupRSSManagerAdminServiceRSSDAOException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getPrivilegeGroupById">
      <wsdl:input message="ns:getPrivilegeGroupByIdRequest" wsaw:Action="urn:getPrivilegeGroupById">
    </wsdl:input>
      <wsdl:output message="ns:getPrivilegeGroupByIdResponse" wsaw:Action="urn:getPrivilegeGroupByIdResponse">
    </wsdl:output>
      <wsdl:fault name="RSSManagerAdminServiceRSSDAOException" message="ns:RSSManagerAdminServiceRSSDAOException" wsaw:Action="urn:getPrivilegeGroupByIdRSSManagerAdminServiceRSSDAOException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getRSSInstanceDataById">
      <wsdl:input message="ns:getRSSInstanceDataByIdRequest" wsaw:Action="urn:getRSSInstanceDataById">
    </wsdl:input>
      <wsdl:output message="ns:getRSSInstanceDataByIdResponse" wsaw:Action="urn:getRSSInstanceDataByIdResponse">
    </wsdl:output>
      <wsdl:fault name="RSSManagerAdminServiceRSSDAOException" message="ns:RSSManagerAdminServiceRSSDAOException" wsaw:Action="urn:getRSSInstanceDataByIdRSSManagerAdminServiceRSSDAOException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createCarbonDSFromDatabaseUserEntry">
      <wsdl:input message="ns:createCarbonDSFromDatabaseUserEntryRequest" wsaw:Action="urn:createCarbonDSFromDatabaseUserEntry">
    </wsdl:input>
      <wsdl:output message="ns:createCarbonDSFromDatabaseUserEntryResponse" wsaw:Action="urn:createCarbonDSFromDatabaseUserEntryResponse">
    </wsdl:output>
      <wsdl:fault name="RSSManagerAdminServiceRSSDAOException" message="ns:RSSManagerAdminServiceRSSDAOException" wsaw:Action="urn:createCarbonDSFromDatabaseUserEntryRSSManagerAdminServiceRSSDAOException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getUserDatabasePermissions">
      <wsdl:input message="ns:getUserDatabasePermissionsRequest" wsaw:Action="urn:getUserDatabasePermissions">
    </wsdl:input>
      <wsdl:output message="ns:getUserDatabasePermissionsResponse" wsaw:Action="urn:getUserDatabasePermissionsResponse">
    </wsdl:output>
      <wsdl:fault name="RSSManagerAdminServiceRSSDAOException" message="ns:RSSManagerAdminServiceRSSDAOException" wsaw:Action="urn:getUserDatabasePermissionsRSSManagerAdminServiceRSSDAOException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="removePrivilegeGroup">
      <wsdl:input message="ns:removePrivilegeGroupRequest" wsaw:Action="urn:removePrivilegeGroup">
    </wsdl:input>
      <wsdl:fault name="RSSManagerAdminServiceRSSDAOException" message="ns:RSSManagerAdminServiceRSSDAOException" wsaw:Action="urn:removePrivilegeGroupRSSManagerAdminServiceRSSDAOException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="removeRSSInstance">
      <wsdl:input message="ns:removeRSSInstanceRequest" wsaw:Action="urn:removeRSSInstance">
    </wsdl:input>
      <wsdl:fault name="RSSManagerAdminServiceRSSDAOException" message="ns:RSSManagerAdminServiceRSSDAOException" wsaw:Action="urn:removeRSSInstanceRSSManagerAdminServiceRSSDAOException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getDatabaseUserById">
      <wsdl:input message="ns:getDatabaseUserByIdRequest" wsaw:Action="urn:getDatabaseUserById">
    </wsdl:input>
      <wsdl:output message="ns:getDatabaseUserByIdResponse" wsaw:Action="urn:getDatabaseUserByIdResponse">
    </wsdl:output>
      <wsdl:fault name="RSSManagerAdminServiceRSSDAOException" message="ns:RSSManagerAdminServiceRSSDAOException" wsaw:Action="urn:getDatabaseUserByIdRSSManagerAdminServiceRSSDAOException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createUser">
      <wsdl:input message="ns:createUserRequest" wsaw:Action="urn:createUser">
    </wsdl:input>
      <wsdl:fault name="RSSManagerAdminServiceRSSDAOException" message="ns:RSSManagerAdminServiceRSSDAOException" wsaw:Action="urn:createUserRSSManagerAdminServiceRSSDAOException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getUsersByDatabaseInstanceId">
      <wsdl:input message="ns:getUsersByDatabaseInstanceIdRequest" wsaw:Action="urn:getUsersByDatabaseInstanceId">
    </wsdl:input>
      <wsdl:output message="ns:getUsersByDatabaseInstanceIdResponse" wsaw:Action="urn:getUsersByDatabaseInstanceIdResponse">
    </wsdl:output>
      <wsdl:fault name="RSSManagerAdminServiceRSSDAOException" message="ns:RSSManagerAdminServiceRSSDAOException" wsaw:Action="urn:getUsersByDatabaseInstanceIdRSSManagerAdminServiceRSSDAOException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="dropUser">
      <wsdl:input message="ns:dropUserRequest" wsaw:Action="urn:dropUser">
    </wsdl:input>
      <wsdl:fault name="RSSManagerAdminServiceRSSDAOException" message="ns:RSSManagerAdminServiceRSSDAOException" wsaw:Action="urn:dropUserRSSManagerAdminServiceRSSDAOException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getPrivilegeGroups">
      <wsdl:input message="ns:getPrivilegeGroupsRequest" wsaw:Action="urn:getPrivilegeGroups">
    </wsdl:input>
      <wsdl:output message="ns:getPrivilegeGroupsResponse" wsaw:Action="urn:getPrivilegeGroupsResponse">
    </wsdl:output>
      <wsdl:fault name="RSSManagerAdminServiceRSSDAOException" message="ns:RSSManagerAdminServiceRSSDAOException" wsaw:Action="urn:getPrivilegeGroupsRSSManagerAdminServiceRSSDAOException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getRoundRobinAssignedRSSInstance">
      <wsdl:input message="ns:getRoundRobinAssignedRSSInstanceRequest" wsaw:Action="urn:getRoundRobinAssignedRSSInstance">
    </wsdl:input>
      <wsdl:output message="ns:getRoundRobinAssignedRSSInstanceResponse" wsaw:Action="urn:getRoundRobinAssignedRSSInstanceResponse">
    </wsdl:output>
      <wsdl:fault name="RSSManagerAdminServiceRSSDAOException" message="ns:RSSManagerAdminServiceRSSDAOException" wsaw:Action="urn:getRoundRobinAssignedRSSInstanceRSSManagerAdminServiceRSSDAOException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createDatabase">
      <wsdl:input message="ns:createDatabaseRequest" wsaw:Action="urn:createDatabase">
    </wsdl:input>
      <wsdl:fault name="RSSManagerAdminServiceRSSDAOException" message="ns:RSSManagerAdminServiceRSSDAOException" wsaw:Action="urn:createDatabaseRSSManagerAdminServiceRSSDAOException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="editRSSInstance">
      <wsdl:input message="ns:editRSSInstanceRequest" wsaw:Action="urn:editRSSInstance">
    </wsdl:input>
      <wsdl:fault name="RSSManagerAdminServiceRSSDAOException" message="ns:RSSManagerAdminServiceRSSDAOException" wsaw:Action="urn:editRSSInstanceRSSManagerAdminServiceRSSDAOException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="editUserPrivileges">
      <wsdl:input message="ns:editUserPrivilegesRequest" wsaw:Action="urn:editUserPrivileges">
    </wsdl:input>
      <wsdl:fault name="RSSManagerAdminServiceRSSDAOException" message="ns:RSSManagerAdminServiceRSSDAOException" wsaw:Action="urn:editUserPrivilegesRSSManagerAdminServiceRSSDAOException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createPrivilegeGroup">
      <wsdl:input message="ns:createPrivilegeGroupRequest" wsaw:Action="urn:createPrivilegeGroup">
    </wsdl:input>
      <wsdl:fault name="RSSManagerAdminServiceRSSDAOException" message="ns:RSSManagerAdminServiceRSSDAOException" wsaw:Action="urn:createPrivilegeGroupRSSManagerAdminServiceRSSDAOException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addRSSInstance">
      <wsdl:input message="ns:addRSSInstanceRequest" wsaw:Action="urn:addRSSInstance">
    </wsdl:input>
      <wsdl:fault name="RSSManagerAdminServiceRSSDAOException" message="ns:RSSManagerAdminServiceRSSDAOException" wsaw:Action="urn:addRSSInstanceRSSManagerAdminServiceRSSDAOException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="dropDatabase">
      <wsdl:input message="ns:dropDatabaseRequest" wsaw:Action="urn:dropDatabase">
    </wsdl:input>
      <wsdl:fault name="RSSManagerAdminServiceRSSDAOException" message="ns:RSSManagerAdminServiceRSSDAOException" wsaw:Action="urn:dropDatabaseRSSManagerAdminServiceRSSDAOException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getDatabaseInstanceList">
      <wsdl:input message="ns:getDatabaseInstanceListRequest" wsaw:Action="urn:getDatabaseInstanceList">
    </wsdl:input>
      <wsdl:output message="ns:getDatabaseInstanceListResponse" wsaw:Action="urn:getDatabaseInstanceListResponse">
    </wsdl:output>
      <wsdl:fault name="RSSManagerAdminServiceRSSDAOException" message="ns:RSSManagerAdminServiceRSSDAOException" wsaw:Action="urn:getDatabaseInstanceListRSSManagerAdminServiceRSSDAOException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getDatabaseInstanceById">
      <wsdl:input message="ns:getDatabaseInstanceByIdRequest" wsaw:Action="urn:getDatabaseInstanceById">
    </wsdl:input>
      <wsdl:output message="ns:getDatabaseInstanceByIdResponse" wsaw:Action="urn:getDatabaseInstanceByIdResponse">
    </wsdl:output>
      <wsdl:fault name="RSSManagerAdminServiceRSSDAOException" message="ns:RSSManagerAdminServiceRSSDAOException" wsaw:Action="urn:getDatabaseInstanceByIdRSSManagerAdminServiceRSSDAOException">
    </wsdl:fault>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="RSSManagerAdminServiceSoap12Binding" type="ns:RSSManagerAdminServicePortType">
    <soap12:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="getRSSInstanceList">
      <soap12:operation soapAction="urn:getRSSInstanceList" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="RSSManagerAdminServiceRSSDAOException">
        <soap12:fault name="RSSManagerAdminServiceRSSDAOException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="testConnection">
      <soap12:operation soapAction="urn:testConnection" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="RSSManagerAdminServiceRSSDAOException">
        <soap12:fault name="RSSManagerAdminServiceRSSDAOException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="editPrivilegeGroup">
      <soap12:operation soapAction="urn:editPrivilegeGroup" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="RSSManagerAdminServiceRSSDAOException">
        <soap12:fault name="RSSManagerAdminServiceRSSDAOException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getPrivilegeGroupById">
      <soap12:operation soapAction="urn:getPrivilegeGroupById" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="RSSManagerAdminServiceRSSDAOException">
        <soap12:fault name="RSSManagerAdminServiceRSSDAOException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getRSSInstanceDataById">
      <soap12:operation soapAction="urn:getRSSInstanceDataById" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="RSSManagerAdminServiceRSSDAOException">
        <soap12:fault name="RSSManagerAdminServiceRSSDAOException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getUserDatabasePermissions">
      <soap12:operation soapAction="urn:getUserDatabasePermissions" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="RSSManagerAdminServiceRSSDAOException">
        <soap12:fault name="RSSManagerAdminServiceRSSDAOException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createCarbonDSFromDatabaseUserEntry">
      <soap12:operation soapAction="urn:createCarbonDSFromDatabaseUserEntry" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="RSSManagerAdminServiceRSSDAOException">
        <soap12:fault name="RSSManagerAdminServiceRSSDAOException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="removePrivilegeGroup">
      <soap12:operation soapAction="urn:removePrivilegeGroup" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="RSSManagerAdminServiceRSSDAOException">
        <soap12:fault name="RSSManagerAdminServiceRSSDAOException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="removeRSSInstance">
      <soap12:operation soapAction="urn:removeRSSInstance" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="RSSManagerAdminServiceRSSDAOException">
        <soap12:fault name="RSSManagerAdminServiceRSSDAOException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getDatabaseUserById">
      <soap12:operation soapAction="urn:getDatabaseUserById" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="RSSManagerAdminServiceRSSDAOException">
        <soap12:fault name="RSSManagerAdminServiceRSSDAOException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createUser">
      <soap12:operation soapAction="urn:createUser" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="RSSManagerAdminServiceRSSDAOException">
        <soap12:fault name="RSSManagerAdminServiceRSSDAOException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getUsersByDatabaseInstanceId">
      <soap12:operation soapAction="urn:getUsersByDatabaseInstanceId" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="RSSManagerAdminServiceRSSDAOException">
        <soap12:fault name="RSSManagerAdminServiceRSSDAOException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getPrivilegeGroups">
      <soap12:operation soapAction="urn:getPrivilegeGroups" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="RSSManagerAdminServiceRSSDAOException">
        <soap12:fault name="RSSManagerAdminServiceRSSDAOException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="dropUser">
      <soap12:operation soapAction="urn:dropUser" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="RSSManagerAdminServiceRSSDAOException">
        <soap12:fault name="RSSManagerAdminServiceRSSDAOException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getRoundRobinAssignedRSSInstance">
      <soap12:operation soapAction="urn:getRoundRobinAssignedRSSInstance" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="RSSManagerAdminServiceRSSDAOException">
        <soap12:fault name="RSSManagerAdminServiceRSSDAOException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="editRSSInstance">
      <soap12:operation soapAction="urn:editRSSInstance" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="RSSManagerAdminServiceRSSDAOException">
        <soap12:fault name="RSSManagerAdminServiceRSSDAOException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createDatabase">
      <soap12:operation soapAction="urn:createDatabase" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="RSSManagerAdminServiceRSSDAOException">
        <soap12:fault name="RSSManagerAdminServiceRSSDAOException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="editUserPrivileges">
      <soap12:operation soapAction="urn:editUserPrivileges" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="RSSManagerAdminServiceRSSDAOException">
        <soap12:fault name="RSSManagerAdminServiceRSSDAOException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createPrivilegeGroup">
      <soap12:operation soapAction="urn:createPrivilegeGroup" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="RSSManagerAdminServiceRSSDAOException">
        <soap12:fault name="RSSManagerAdminServiceRSSDAOException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addRSSInstance">
      <soap12:operation soapAction="urn:addRSSInstance" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="RSSManagerAdminServiceRSSDAOException">
        <soap12:fault name="RSSManagerAdminServiceRSSDAOException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="dropDatabase">
      <soap12:operation soapAction="urn:dropDatabase" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="RSSManagerAdminServiceRSSDAOException">
        <soap12:fault name="RSSManagerAdminServiceRSSDAOException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getDatabaseInstanceList">
      <soap12:operation soapAction="urn:getDatabaseInstanceList" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="RSSManagerAdminServiceRSSDAOException">
        <soap12:fault name="RSSManagerAdminServiceRSSDAOException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getDatabaseInstanceById">
      <soap12:operation soapAction="urn:getDatabaseInstanceById" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="RSSManagerAdminServiceRSSDAOException">
        <soap12:fault name="RSSManagerAdminServiceRSSDAOException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="RSSManagerAdminServiceSoap11Binding" type="ns:RSSManagerAdminServicePortType">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="getRSSInstanceList">
      <soap:operation soapAction="urn:getRSSInstanceList" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="RSSManagerAdminServiceRSSDAOException">
        <soap:fault name="RSSManagerAdminServiceRSSDAOException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="testConnection">
      <soap:operation soapAction="urn:testConnection" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="RSSManagerAdminServiceRSSDAOException">
        <soap:fault name="RSSManagerAdminServiceRSSDAOException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="editPrivilegeGroup">
      <soap:operation soapAction="urn:editPrivilegeGroup" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="RSSManagerAdminServiceRSSDAOException">
        <soap:fault name="RSSManagerAdminServiceRSSDAOException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getPrivilegeGroupById">
      <soap:operation soapAction="urn:getPrivilegeGroupById" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="RSSManagerAdminServiceRSSDAOException">
        <soap:fault name="RSSManagerAdminServiceRSSDAOException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getRSSInstanceDataById">
      <soap:operation soapAction="urn:getRSSInstanceDataById" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="RSSManagerAdminServiceRSSDAOException">
        <soap:fault name="RSSManagerAdminServiceRSSDAOException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getUserDatabasePermissions">
      <soap:operation soapAction="urn:getUserDatabasePermissions" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="RSSManagerAdminServiceRSSDAOException">
        <soap:fault name="RSSManagerAdminServiceRSSDAOException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createCarbonDSFromDatabaseUserEntry">
      <soap:operation soapAction="urn:createCarbonDSFromDatabaseUserEntry" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="RSSManagerAdminServiceRSSDAOException">
        <soap:fault name="RSSManagerAdminServiceRSSDAOException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="removePrivilegeGroup">
      <soap:operation soapAction="urn:removePrivilegeGroup" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="RSSManagerAdminServiceRSSDAOException">
        <soap:fault name="RSSManagerAdminServiceRSSDAOException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="removeRSSInstance">
      <soap:operation soapAction="urn:removeRSSInstance" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="RSSManagerAdminServiceRSSDAOException">
        <soap:fault name="RSSManagerAdminServiceRSSDAOException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getDatabaseUserById">
      <soap:operation soapAction="urn:getDatabaseUserById" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="RSSManagerAdminServiceRSSDAOException">
        <soap:fault name="RSSManagerAdminServiceRSSDAOException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createUser">
      <soap:operation soapAction="urn:createUser" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="RSSManagerAdminServiceRSSDAOException">
        <soap:fault name="RSSManagerAdminServiceRSSDAOException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getUsersByDatabaseInstanceId">
      <soap:operation soapAction="urn:getUsersByDatabaseInstanceId" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="RSSManagerAdminServiceRSSDAOException">
        <soap:fault name="RSSManagerAdminServiceRSSDAOException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getPrivilegeGroups">
      <soap:operation soapAction="urn:getPrivilegeGroups" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="RSSManagerAdminServiceRSSDAOException">
        <soap:fault name="RSSManagerAdminServiceRSSDAOException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="dropUser">
      <soap:operation soapAction="urn:dropUser" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="RSSManagerAdminServiceRSSDAOException">
        <soap:fault name="RSSManagerAdminServiceRSSDAOException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getRoundRobinAssignedRSSInstance">
      <soap:operation soapAction="urn:getRoundRobinAssignedRSSInstance" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="RSSManagerAdminServiceRSSDAOException">
        <soap:fault name="RSSManagerAdminServiceRSSDAOException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="editRSSInstance">
      <soap:operation soapAction="urn:editRSSInstance" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="RSSManagerAdminServiceRSSDAOException">
        <soap:fault name="RSSManagerAdminServiceRSSDAOException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createDatabase">
      <soap:operation soapAction="urn:createDatabase" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="RSSManagerAdminServiceRSSDAOException">
        <soap:fault name="RSSManagerAdminServiceRSSDAOException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="editUserPrivileges">
      <soap:operation soapAction="urn:editUserPrivileges" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="RSSManagerAdminServiceRSSDAOException">
        <soap:fault name="RSSManagerAdminServiceRSSDAOException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createPrivilegeGroup">
      <soap:operation soapAction="urn:createPrivilegeGroup" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="RSSManagerAdminServiceRSSDAOException">
        <soap:fault name="RSSManagerAdminServiceRSSDAOException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addRSSInstance">
      <soap:operation soapAction="urn:addRSSInstance" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="RSSManagerAdminServiceRSSDAOException">
        <soap:fault name="RSSManagerAdminServiceRSSDAOException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="dropDatabase">
      <soap:operation soapAction="urn:dropDatabase" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="RSSManagerAdminServiceRSSDAOException">
        <soap:fault name="RSSManagerAdminServiceRSSDAOException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getDatabaseInstanceList">
      <soap:operation soapAction="urn:getDatabaseInstanceList" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="RSSManagerAdminServiceRSSDAOException">
        <soap:fault name="RSSManagerAdminServiceRSSDAOException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getDatabaseInstanceById">
      <soap:operation soapAction="urn:getDatabaseInstanceById" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="RSSManagerAdminServiceRSSDAOException">
        <soap:fault name="RSSManagerAdminServiceRSSDAOException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="RSSManagerAdminServiceHttpBinding" type="ns:RSSManagerAdminServicePortType">
    <http:binding verb="POST"/>
    <wsdl:operation name="getRSSInstanceList">
      <http:operation location="getRSSInstanceList"/>
      <wsdl:input>
        <mime:content part="parameters" type="text/xml"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content part="parameters" type="text/xml"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="testConnection">
      <http:operation location="testConnection"/>
      <wsdl:input>
        <mime:content part="parameters" type="text/xml"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content part="parameters" type="text/xml"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="editPrivilegeGroup">
      <http:operation location="editPrivilegeGroup"/>
      <wsdl:input>
        <mime:content part="parameters" type="text/xml"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="getPrivilegeGroupById">
      <http:operation location="getPrivilegeGroupById"/>
      <wsdl:input>
        <mime:content part="parameters" type="text/xml"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content part="parameters" type="text/xml"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getRSSInstanceDataById">
      <http:operation location="getRSSInstanceDataById"/>
      <wsdl:input>
        <mime:content part="parameters" type="text/xml"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content part="parameters" type="text/xml"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getUserDatabasePermissions">
      <http:operation location="getUserDatabasePermissions"/>
      <wsdl:input>
        <mime:content part="parameters" type="text/xml"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content part="parameters" type="text/xml"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="createCarbonDSFromDatabaseUserEntry">
      <http:operation location="createCarbonDSFromDatabaseUserEntry"/>
      <wsdl:input>
        <mime:content part="parameters" type="text/xml"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content part="parameters" type="text/xml"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="removePrivilegeGroup">
      <http:operation location="removePrivilegeGroup"/>
      <wsdl:input>
        <mime:content part="parameters" type="text/xml"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="removeRSSInstance">
      <http:operation location="removeRSSInstance"/>
      <wsdl:input>
        <mime:content part="parameters" type="text/xml"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="getDatabaseUserById">
      <http:operation location="getDatabaseUserById"/>
      <wsdl:input>
        <mime:content part="parameters" type="text/xml"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content part="parameters" type="text/xml"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="createUser">
      <http:operation location="createUser"/>
      <wsdl:input>
        <mime:content part="parameters" type="text/xml"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="getUsersByDatabaseInstanceId">
      <http:operation location="getUsersByDatabaseInstanceId"/>
      <wsdl:input>
        <mime:content part="parameters" type="text/xml"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content part="parameters" type="text/xml"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getPrivilegeGroups">
      <http:operation location="getPrivilegeGroups"/>
      <wsdl:input>
        <mime:content part="parameters" type="text/xml"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content part="parameters" type="text/xml"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="dropUser">
      <http:operation location="dropUser"/>
      <wsdl:input>
        <mime:content part="parameters" type="text/xml"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="getRoundRobinAssignedRSSInstance">
      <http:operation location="getRoundRobinAssignedRSSInstance"/>
      <wsdl:input>
        <mime:content part="parameters" type="text/xml"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content part="parameters" type="text/xml"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="editRSSInstance">
      <http:operation location="editRSSInstance"/>
      <wsdl:input>
        <mime:content part="parameters" type="text/xml"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="createDatabase">
      <http:operation location="createDatabase"/>
      <wsdl:input>
        <mime:content part="parameters" type="text/xml"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="editUserPrivileges">
      <http:operation location="editUserPrivileges"/>
      <wsdl:input>
        <mime:content part="parameters" type="text/xml"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="createPrivilegeGroup">
      <http:operation location="createPrivilegeGroup"/>
      <wsdl:input>
        <mime:content part="parameters" type="text/xml"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="addRSSInstance">
      <http:operation location="addRSSInstance"/>
      <wsdl:input>
        <mime:content part="parameters" type="text/xml"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="dropDatabase">
      <http:operation location="dropDatabase"/>
      <wsdl:input>
        <mime:content part="parameters" type="text/xml"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="getDatabaseInstanceList">
      <http:operation location="getDatabaseInstanceList"/>
      <wsdl:input>
        <mime:content part="parameters" type="text/xml"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content part="parameters" type="text/xml"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getDatabaseInstanceById">
      <http:operation location="getDatabaseInstanceById"/>
      <wsdl:input>
        <mime:content part="parameters" type="text/xml"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content part="parameters" type="text/xml"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="RSSManagerAdminService">
    <wsdl:port name="RSSManagerAdminServiceHttpsSoap11Endpoint" binding="ns:RSSManagerAdminServiceSoap11Binding">
      <soap:address location="https://data.cloud-test.wso2.com:9448/services/RSSManagerAdminService.RSSManagerAdminServiceHttpsSoap11Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="RSSManagerAdminServiceHttpsEndpoint" binding="ns:RSSManagerAdminServiceHttpBinding">
      <http:address location="https://data.cloud-test.wso2.com:9448/services/RSSManagerAdminService.RSSManagerAdminServiceHttpsEndpoint/"/>
    </wsdl:port>
    <wsdl:port name="RSSManagerAdminServiceHttpsSoap12Endpoint" binding="ns:RSSManagerAdminServiceSoap12Binding">
      <soap12:address location="https://data.cloud-test.wso2.com:9448/services/RSSManagerAdminService.RSSManagerAdminServiceHttpsSoap12Endpoint/"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>
